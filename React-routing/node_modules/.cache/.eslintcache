[{"C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\index.js":"1","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\reportWebVitals.js":"2","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\App.js":"3","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\Components\\Hero.js":"4","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\Components\\Navbar.js":"5","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\Components\\Textform.js":"6"},{"size":546,"mtime":1663086272413,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1662805989409,"results":"9","hashOfConfig":"8"},{"size":2680,"mtime":1663160396677,"results":"10","hashOfConfig":"8"},{"size":2948,"mtime":1663004114310,"results":"11","hashOfConfig":"8"},{"size":3019,"mtime":1663160513804,"results":"12","hashOfConfig":"8"},{"size":2568,"mtime":1663002459335,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18fly6w",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\index.js",[],[],"C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\reportWebVitals.js",[],[],[],"C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\App.js",["35"],[],"import './App.css';\n// import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport Navbar from './Components/Navbar';\nimport Hero from './Components/Hero';\nimport Textform from './Components/Textform';\nimport { useState } from 'react';\n// import {\n//   BrowserRouter as Router,\n//   Route,\n//   Routes,\n//   // Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [buttonText, setButtonText] = useState(\"Dark Mode\");\n  let togglemodeDark = () => {\n    if (mode === 'light') {\n      setMode('secondary');\n      document.body.style.backgroundColor = '#C996CC'\n      document.title = \"V1nlands - purple mode enabled\"\n      setButtonText(\"Enable Light Mode\");\n\n      // message chamkane vala code \n\n      // setInterval(() => {\n      //   document.title =\"(12 New Messages)\"\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title =\"V1nlands - purple mode enabled\"\n      // },1500);\n\n\n\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = 'white'\n      setButtonText(\"Enable Dark Mode\");\n    }\n  }\n\n  const [contrastMode, setContrastMode] = useState('light');\n  let togglemodeContrast = () => {\n    if (contrastMode === 'light') {\n      setContrastMode('dark');\n      document.body.style.backgroundColor = '#180A0A'\n      document.body.style.color = 'white'\n      document.title = \"V1nlands - Hign Contrast mode enabled\"\n      setButtonText(\"Enable Light Mode\");\n    }\n    else {\n      setContrastMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.color = 'black';\n      setButtonText(\"Enable Light Mode\");\n    }\n  }\n\n  const [joymode, setJoyMode] = useState('light');\n  let togglemodeJoy = () => {\n    if (joymode === 'light') {\n      setJoyMode('dark');\n      document.body.style.backgroundColor = '#E63E6D'\n      document.title = \"V1nlands - Pink mode enabled\"\n      setButtonText(\"Enable Light Mode\");\n    }\n    else {\n      setJoyMode('light');\n      document.body.style.backgroundColor = 'white';\n      setButtonText(\"Enable Light Mode\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"V1nlands\" mode={mode} togglemodeDark={togglemodeDark} buttonText={buttonText} togglemodeContrast={togglemodeContrast} togglemodeJoy={togglemodeJoy} />\n        <div className='container'>\n        <Hero />\n\n          {/* <Routes>\n            <Route exact path=\"/\" element={<Hero />}/> */}\n          {/* </Routes>\n          <Routes>\n            <Route exact path=\"/Link\" element={<Textform />} />\n          </Routes> */}\n\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\Components\\Hero.js",[],[],"C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\Components\\Navbar.js",["36","37","38","39","40","41","42"],[],"import React from 'react'\r\nimport { a } from 'react-router-dom';\r\n\r\nfunction Navbar(props) {\r\n    \r\n    return (\r\n        <div>\r\n            <nav className={`navbar navbar-expand-lg bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                            </li>\r\n                            {/* <li className=\"nav-item\">\r\n                                <a className=\"nav-a\" href=\"/a\">a</a>\r\n                            </li> */}\r\n                            <li className=\"nav-item dropdown\">\r\n                                <a className=\"nav-a dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Dropdown\r\n                                </a>\r\n                                <ul className=\"dropdown-menu \">\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                    <li><hr className=\"dropdown-divider\" /></li>\r\n                                    <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                        <button type=\"button\" className=\"btn btn-dark d-flex mx-2\" onClick={props.togglemodeDark}>{props.buttonText}</button>\r\n                        <button type=\"button\" className=\"btn btn-success d-flex mx-2\" onClick={props.togglemodeContrast}>{props.buttonText}</button>\r\n                        <button type=\"button\" className=\"btn btn-danger d-flex mx-2\" onClick={props.togglemodeJoy}>{props.buttonText}</button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n\r\n\r\n\r\n// const [darkmode,setDarkMode]=useState({\r\n//     backgroundColor:'black'\r\n// });\r\n// const toggleDarkMode =()=>{\r\n//     if(darkmode.color==='black'){\r\n//         setDarkMode({\r\n//             color: 'white',\r\n//             backgroundColor:'black',\r\n//         })\r\n//     }\r\n//     else{\r\n//         setDarkMode({\r\n//             color: 'black',\r\n//             backgroundColor:'grey',\r\n//         })\r\n//     }\r\n// }","C:\\Users\\Krish\\OneDrive\\Desktop\\Reaxt\\React-routing\\src\\Components\\Textform.js",[],[],{"ruleId":"43","severity":1,"message":"44","line":6,"column":8,"nodeType":"45","messageId":"46","endLine":6,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":2,"column":10,"nodeType":"45","messageId":"46","endLine":2,"endColumn":11},{"ruleId":"48","severity":1,"message":"49","line":10,"column":21,"nodeType":"50","endLine":10,"endColumn":58},{"ruleId":"48","severity":1,"message":"49","line":17,"column":33,"nodeType":"50","endLine":17,"endColumn":90},{"ruleId":"48","severity":1,"message":"49","line":23,"column":33,"nodeType":"50","endLine":23,"endColumn":141},{"ruleId":"48","severity":1,"message":"49","line":27,"column":41,"nodeType":"50","endLine":27,"endColumn":79},{"ruleId":"48","severity":1,"message":"49","line":28,"column":41,"nodeType":"50","endLine":28,"endColumn":79},{"ruleId":"48","severity":1,"message":"49","line":30,"column":41,"nodeType":"50","endLine":30,"endColumn":79},"no-unused-vars","'Textform' is defined but never used.","Identifier","unusedVar","'a' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement"]